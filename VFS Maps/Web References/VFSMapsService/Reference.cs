//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5477.
// 
#pragma warning disable 1591

namespace VFSMaps.VFSMapsService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCountryCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTATSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationSummaryJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationSummaryXmlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::VFSMaps.Properties.Settings.Default.VFSMaps_VFSMapsService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCountryCodeListCompletedEventHandler GetCountryCodeListCompleted;
        
        /// <remarks/>
        public event GetCountryMasterCompletedEventHandler GetCountryMasterCompleted;
        
        /// <remarks/>
        public event GetTATSummaryCompletedEventHandler GetTATSummaryCompleted;
        
        /// <remarks/>
        public event GetLocationSummaryJsonCompletedEventHandler GetLocationSummaryJsonCompleted;
        
        /// <remarks/>
        public event GetLocationSummaryXmlCompletedEventHandler GetLocationSummaryXmlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryCodeList() {
            object[] results = this.Invoke("GetCountryCodeList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryCodeListAsync() {
            this.GetCountryCodeListAsync(null);
        }
        
        /// <remarks/>
        public void GetCountryCodeListAsync(object userState) {
            if ((this.GetCountryCodeListOperationCompleted == null)) {
                this.GetCountryCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryCodeListOperationCompleted);
            }
            this.InvokeAsync("GetCountryCodeList", new object[0], this.GetCountryCodeListOperationCompleted, userState);
        }
        
        private void OnGetCountryCodeListOperationCompleted(object arg) {
            if ((this.GetCountryCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryCodeListCompleted(this, new GetCountryCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryMaster() {
            object[] results = this.Invoke("GetCountryMaster", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryMasterAsync() {
            this.GetCountryMasterAsync(null);
        }
        
        /// <remarks/>
        public void GetCountryMasterAsync(object userState) {
            if ((this.GetCountryMasterOperationCompleted == null)) {
                this.GetCountryMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryMasterOperationCompleted);
            }
            this.InvokeAsync("GetCountryMaster", new object[0], this.GetCountryMasterOperationCompleted, userState);
        }
        
        private void OnGetCountryMasterOperationCompleted(object arg) {
            if ((this.GetCountryMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryMasterCompleted(this, new GetCountryMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTATSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTATSummary(int CountryID) {
            object[] results = this.Invoke("GetTATSummary", new object[] {
                        CountryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTATSummaryAsync(int CountryID) {
            this.GetTATSummaryAsync(CountryID, null);
        }
        
        /// <remarks/>
        public void GetTATSummaryAsync(int CountryID, object userState) {
            if ((this.GetTATSummaryOperationCompleted == null)) {
                this.GetTATSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTATSummaryOperationCompleted);
            }
            this.InvokeAsync("GetTATSummary", new object[] {
                        CountryID}, this.GetTATSummaryOperationCompleted, userState);
        }
        
        private void OnGetTATSummaryOperationCompleted(object arg) {
            if ((this.GetTATSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTATSummaryCompleted(this, new GetTATSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationSummaryJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLocationSummaryJson(int CountryID) {
            object[] results = this.Invoke("GetLocationSummaryJson", new object[] {
                        CountryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationSummaryJsonAsync(int CountryID) {
            this.GetLocationSummaryJsonAsync(CountryID, null);
        }
        
        /// <remarks/>
        public void GetLocationSummaryJsonAsync(int CountryID, object userState) {
            if ((this.GetLocationSummaryJsonOperationCompleted == null)) {
                this.GetLocationSummaryJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationSummaryJsonOperationCompleted);
            }
            this.InvokeAsync("GetLocationSummaryJson", new object[] {
                        CountryID}, this.GetLocationSummaryJsonOperationCompleted, userState);
        }
        
        private void OnGetLocationSummaryJsonOperationCompleted(object arg) {
            if ((this.GetLocationSummaryJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationSummaryJsonCompleted(this, new GetLocationSummaryJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationSummaryXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLocationSummaryXml(int CountryID) {
            object[] results = this.Invoke("GetLocationSummaryXml", new object[] {
                        CountryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationSummaryXmlAsync(int CountryID) {
            this.GetLocationSummaryXmlAsync(CountryID, null);
        }
        
        /// <remarks/>
        public void GetLocationSummaryXmlAsync(int CountryID, object userState) {
            if ((this.GetLocationSummaryXmlOperationCompleted == null)) {
                this.GetLocationSummaryXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationSummaryXmlOperationCompleted);
            }
            this.InvokeAsync("GetLocationSummaryXml", new object[] {
                        CountryID}, this.GetLocationSummaryXmlOperationCompleted, userState);
        }
        
        private void OnGetLocationSummaryXmlOperationCompleted(object arg) {
            if ((this.GetLocationSummaryXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationSummaryXmlCompleted(this, new GetLocationSummaryXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetCountryCodeListCompletedEventHandler(object sender, GetCountryCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetCountryMasterCompletedEventHandler(object sender, GetCountryMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTATSummaryCompletedEventHandler(object sender, GetTATSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTATSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTATSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetLocationSummaryJsonCompletedEventHandler(object sender, GetLocationSummaryJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationSummaryJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationSummaryJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetLocationSummaryXmlCompletedEventHandler(object sender, GetLocationSummaryXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationSummaryXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationSummaryXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591